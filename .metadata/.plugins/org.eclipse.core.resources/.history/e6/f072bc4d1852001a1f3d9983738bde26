package com.boot.controller;

import java.util.List;
import java.util.Map;

import org.hibernate.annotations.SelectBeforeUpdate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.boot.model.City;
import com.boot.model.Person;
import com.boot.services.DataService;
import com.boot.services.PersonService;

@RestController
@RequestMapping("/api")
public class APIController {
@Autowired
DataService dservice;
@Autowired

PersonService pservice;
	@RequestMapping("/greet")
	public String hello() {
		
		return "Hello!!! Spring Boot!!";
		
	}

	@RequestMapping("/teams")
	public Map<String,String[]> teams(){
		
		return dservice.names();
	}
	
	@RequestMapping("/cities")
	public List<City> getcities(){
		
		return dservice.getCity();
	}
	@RequestMapping("/cities/{pattern}")
	public List<City> getcities(@PathVariable("pattern")String pattern){
		
		return dservice.getCities(pattern);
	}
	
	@PostMapping("/person")
	@PutMapping("/person")
	
	public  ResponseEntity<Person> addPerson(@RequestBody Person person)
	{
		try {
			pservice.putPerson(person);
	return new ResponseEntity<Person>(person,HttpStatus.OK);
			
			
		}
		catch(Exception e) {
			return new ResponseEntity<Person>(HttpStatus.INTERNAL_SERVER_ERROR);
			
		}
		
	}

	@DeleteMapping("/person")
	
	public  ResponseEntity<Person> deletePerson(@RequestBody Person person)
	{
		try {
			pservice.removePerson(person);
	return new ResponseEntity<Person>(person,HttpStatus.OK);
			
			
		}
		catch(Exception e) {
			return new ResponseEntity<Person>(HttpStatus.INTERNAL_SERVER_ERROR);
			
		}
		
	}
	
@DeleteMapping("/person/{ID}")
	
	public  ResponseEntity<Integer> deletePerson(@PathVariable Integer sno)
	{
		try {
			pservice.removePerson(sno);
	return new ResponseEntity<Integer>(sno,HttpStatus.OK);
			
			
		}
		catch(Exception e) {
			e.printStackTrace();
			return new ResponseEntity<Integer>(HttpStatus.INTERNAL_SERVER_ERROR);
			
		}
		
	}
}
